package days14;

import java.security.PublicKey;

public class Ex01 {
		
	// 멤버변수(필드)
	public static int age = 10;
	String name;
	
	// 멤버함수(메서드)
	public static void main(String[] args) {
		
		// 멤버변수 X
		// 지역변수
		// Illegal modifier for parameter age; only final is permitted
		// public static int age = 10;
		int age = 10;
		
		/*
		 * 1. 객체 지향적 프로그래밍
		 * 	  Object Oriented Programming
		 * 	  OOP
		 * 	  프로그래밍하는 방법(기법) 중 1
		 * 
		 * 	  완성된 프로그램 = 시작객체(Object) + 객체(Object) + 객체(Object)...
		 * 					ㄴ 시작객체 반드시 필요함.
		 * 				   class 선언
		 * 					{
		 * 						main(){
		 * 							  //
		 * 							} // 기능, 함수
		 * 					}
		 * 		예) 게임 컴퓨터 조립 == 프로그램
		 * 			- 머니
		 * 			- 하고자하는 목적(게임)에 맞춰 컴퓨터의 구성품 구성
		 *			- 다나와 (가격 비교 사이트)
		 *			  - 하나하나 주문
		 *			- 컴퓨터 구성품(부품) == 객체들...
		 *			- 컴퓨터 조립
		 *			- 테스트
		 *			- 사용...			
		 * 
		 * 		예) 생산성 향상.
		 * 		   유지 보수 용이.
		 * 
		 * 2. 객체 지향 언어 - 자바
		 * 3. [ OOP 특징 ] == 클래스 특징
		 *    1) 캡슐화 - 
		 *    2) 은닉화 - 
		 *    3) 상속성 - 
		 *    4) 다형성 - 
		 *    5) 추상화 - 
		 *    
		 * 4. 클래스(Class)		= 객체의 설계도
		 * 5. 객체(Object)		= 클래스로 실제 존재하는 것.
		 * 			  사물(유형) 또는 개념(무형)의 객체
		 * 			클래스타입으로 	
		 * 6. 인스턴스(instance)	= 생성된 객체 (실제 지어진 집같은 존재)
		 * 7. 인스턴스화 = 클래스(설계도) -> 객체(집)를 생성하는 과정
		 * 
		 * 
		 * 8. 클래스를 설계하는 과정
		 *   1) 객체의 구성 요소(속성,기능) 파악 - 목록 작성
		 *   2) 클래스 선언
		 *     형식)							   식별자 - 변수명, 함수명, 클래스명 등
		 *     [접근 지정자][기타제어자] class(예약어) 클래스명 
		 *     		[extends Super 클래스]
		 *     		[implements 인터페이스...]{
		 *     		
		 *     		// 클래스의 멤버 ( == 객체의 구성요소 ) - 필드,메서드
		 *     		// 1) 속성 property(특징) - 멤버변수(==필드field)
		 *     		//	  형식) [접근지정자][기타제어자] 자료형 변수명[=초기값];
		 *     		// 2) 기능 function(함수) - 멤버함수(==메서드 method)
		 *     }
		 *     
		 *   3) 객체 생성 - 테스트
		 *   4) 문제점 파악 - 유지, 보수
		 *   5) 상용화 - 배포
		 *   6) 버전관리 - 기능 추가, 수정(보안)
		 * 	
		 * 예) 망치
		 *    - 용도 : 가정용, 캠핑용
		 *    - 기능 : 못 ...
		 *    - 가격(비용) : 1백만원 X
		 *    - 특징 : 가로, 세로, 재질, 쇠... ( 속성 ) 
		 *    	 int width;
		 *       int height;
		 *    :
		 *    
		 *   실습) Tv   클래스 선언, 객체 생성 사용 예.
		 *     1) 목록 작성
		 *     2) 클래스 선언
		 * */

	}

}//class
